name = App-psst
; author = Matthew Astley <mca@sanger.ac.uk>
license = Perl_5

; I wrote the proof-of-concept and some of the code at $work so
; copyright_holder might be debatable, probably not important.
copyright_holder = Wellcome Trust Sanger Institute

[MetaResources]
homepage = https://github.com/mca-wtsi/psst
;repository.url = git@github.com:mca-wtsi/psst.git
repository.url = git://github.com/mca-wtsi/psst
repository.web = https://github.com/mca-wtsi/psst
repository.type = git

;;; This is still relevant, but I don't see how to tell dzil about it.
;   Not present in v1.4 meta spec?
;
; optional_features:
;   config:
;     description:  Ability to read ~/.psst.yaml
;     requires:
;       YAML:  0.71

[GatherDir]
include_dotfiles = 1 ; for t/*/.psst.yaml
exclude_match = ^\.git(ignore|/.*)$
exclude_match = (^|/)#[^/]+#$ ; emacs autosave
exclude_match = ~$ ; emacs backup

[ExecDir]
dir = script

[PruneCruft]
[MinimumPerl] ; with Perl::MinimumVersion
[Bugtracker] ; rt.cpan.org
[MetaYAML]
[MakeMaker]
[Manifest]


[Prereqs]
local::lib = 1.008 ; for PERL_LOCAL_LIB_ROOT

[Prereqs / TestRequires]
Test::More = 0
Time::HiRes = 1.9713 ; for ualarm( >= 1E6 )


;;; Generate extra files in dist
;
[License] ; (full text)
; [Readme] ; (name, version, abstract, licence notice)

[HasVersionTests]
; add xt/release/has-version.t - a standard Test::HasVersion test


[PkgVersion]
; or [OurPkgVersion], which needs telling where but doesn't add lines


; [ChangelogFromGit] or (derived) [GitFmtChanges]

[Git::NextVersion]
; version = last tagged version plus one
; [Git::DescribeVersion] ; alternatively, take version from preceding tag


[Git::CommitBuild]
; commit the build result to branch built/master
branch = built/%b
message = Build results of %v (%h on %b)

[Git::Check]
; prevent release if working copy is mucky
allow_dirty =

; [Git::Commit] to commit changes, after release

[Git::Tag]
tag_message = v%v built with dzil %{yyyy-MM-dd HH:mm:ss}d
; tagging happens after release
; [Git::Tag::ForRelease] can also do this, with different options

; [Git::Push]
;; not ready for autopush yet

; [ArchiveRelease] ; stash it somewhere
